{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Katpa\\\\Documents\\\\GitHub\\\\MusicSite\\\\client\\\\src\\\\components\\\\ContactPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./../css/Contact.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ContactPage(props) {\n  _s();\n\n  const [status, setStatus] = useState(\"Submit\");\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setStatus(\"Sending...\");\n    const {\n      name,\n      email,\n      message\n    } = e.target.elements;\n    let details = {\n      name: name.value,\n      email: email.value,\n      message: message.value\n    };\n    let response = await fetch(\"http://localhost:5000/contact\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\"\n      },\n      body: JSON.stringify(details)\n    });\n    setStatus(\"Submit\");\n    let result = await response.json();\n    alert(result.status);\n  };\n\n  const contactTemplate = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contactContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"contactForm\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"fnameLabel\",\n        children: [\"First Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"fname\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"lnameLabel\",\n        children: [\"Last Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"lname\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"emailLabel\",\n        children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"messageLabel\",\n        children: [\"Message:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"Text1\",\n          cols: \"40\",\n          rows: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: contactTemplate\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ContactPage, \"qESKK7LDpFTuMSR0UrKu+hcLdmU=\");\n\n_c = ContactPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactPage\");","map":{"version":3,"sources":["C:/Users/Katpa/Documents/GitHub/MusicSite/client/src/components/ContactPage.js"],"names":["React","useState","ContactPage","props","status","setStatus","handleSubmit","e","preventDefault","name","email","message","target","elements","details","value","response","fetch","method","headers","body","JSON","stringify","result","json","alert","contactTemplate"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,sBAAP;;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAEvC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,QAAD,CAApC;;AAEA,QAAMK,YAAY,GAAG,MAAOC,CAAP,IAAa;AAE9BA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,SAAS,CAAC,YAAD,CAAT;AAEA,UAAM;AAAEI,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA;AAAf,QAA2BJ,CAAC,CAACK,MAAF,CAASC,QAA1C;AAEA,QAAIC,OAAO,GAAG;AACVL,MAAAA,IAAI,EAAEA,IAAI,CAACM,KADD;AAEVL,MAAAA,KAAK,EAAEA,KAAK,CAACK,KAFH;AAGVJ,MAAAA,OAAO,EAAEA,OAAO,CAACI;AAHP,KAAd;AAMA,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAAD,EAAkC;AACxDC,MAAAA,MAAM,EAAE,MADgD;AAExDC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAF+C;AAKxDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,OAAf;AALkD,KAAlC,CAA1B;AAQAT,IAAAA,SAAS,CAAC,QAAD,CAAT;AACA,QAAIkB,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAnB;AACAC,IAAAA,KAAK,CAACF,MAAM,CAACnB,MAAR,CAAL;AACH,GAxBD;;AA0BA,QAAMsB,eAAe,gBACjB;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,2BACI;AAAM,MAAA,SAAS,EAAC,aAAhB;AAA8B,MAAA,QAAQ,EAAEpB,YAAxC;AAAA,8BACI;AAAO,QAAA,SAAS,EAAC,YAAjB;AAAA,+CAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAO,QAAA,SAAS,EAAC,YAAjB;AAAA,8CAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAYI;AAAO,QAAA,SAAS,EAAC,YAAjB;AAAA,0CAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ,eAiBI;AAAO,QAAA,SAAS,EAAC,cAAjB;AAAA,4CAEI;AAAU,UAAA,IAAI,EAAC,OAAf;AAAuB,UAAA,IAAI,EAAC,IAA5B;AAAiC,UAAA,IAAI,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ,eAsBI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA,kBAAuBF;AAAvB;AAAA;AAAA;AAAA;AAAA,cAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;;AA6BA,sBACI;AAAA,cACKsB;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAhEuBxB,W;;KAAAA,W","sourcesContent":["import React, {useState} from \"react\";\r\nimport \"./../css/Contact.css\"\r\n\r\nexport default function ContactPage(props) {\r\n\r\n    const [status, setStatus] = useState(\"Submit\");\r\n\r\n    const handleSubmit = async (e) => {\r\n\r\n        e.preventDefault();\r\n        setStatus(\"Sending...\");\r\n\r\n        const { name, email, message } = e.target.elements;\r\n\r\n        let details = {\r\n            name: name.value,\r\n            email: email.value,\r\n            message: message.value,\r\n        };\r\n\r\n        let response = await fetch(\"http://localhost:5000/contact\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json;charset=utf-8\",\r\n            },\r\n            body: JSON.stringify(details),\r\n        });\r\n\r\n        setStatus(\"Submit\");\r\n        let result = await response.json();\r\n        alert(result.status);\r\n    };\r\n\r\n    const contactTemplate = (\r\n        <div className=\"contactContainer\">\r\n            <form className=\"contactForm\" onSubmit={handleSubmit}>\r\n                <label className=\"fnameLabel\">\r\n                    First Name:\r\n                    <input type=\"text\" name=\"fname\" />\r\n                </label>\r\n\r\n                <label className=\"lnameLabel\">\r\n                    Last Name:\r\n                    <input type=\"text\" name=\"lname\" />\r\n                </label>\r\n                \r\n\r\n                <label className=\"emailLabel\">\r\n                    Email:\r\n                    <input type=\"text\" name=\"email\" />\r\n                </label>\r\n\r\n                <label className=\"messageLabel\">\r\n                    Message:\r\n                    <textarea name=\"Text1\" cols=\"40\" rows=\"5\"></textarea>\r\n                </label>\r\n\r\n                <button type=\"submit\">{status}</button>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            {contactTemplate}\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}